{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","startIndex","endIndex","pageNumbers","totalItems","itemsPerPage","numberOfPages","Math","ceil","Array","from","length","_","i","getPageNumbers","items","to","numbers","n","push","getNumbers","map","isFirstPage","isLastPage","className","href","onClick","pageNumber","slice","item","App","useState","page","setPage","setPerPage","min","id","value","onChange","event","Number","target","numberOfItems","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"mKAUO,I,OCCMA,EAAa,SAAC,GAOH,IANtBC,EAMqB,EANrBA,MACAC,EAKqB,EALrBA,QACAC,EAIqB,EAJrBA,YACAC,EAGqB,EAHrBA,aACAC,EAEqB,EAFrBA,WACAC,EACqB,EADrBA,SAEMC,EDTsB,SAACC,EAAoBC,GACjD,IAAMC,EAAgBC,KAAKC,KAAKJ,EAAaC,GAE7C,OAAOI,MAAMC,KAAK,CAAEC,OAAQL,IAAiB,SAACM,EAAGC,GAAJ,OAAUA,EAAI,KCMvCC,CAAejB,EAAOC,GACpCiB,EDpBD,SAAoBL,EAAcM,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIR,EAAMQ,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECaOG,CAAW,EAAGvB,GAAOwB,KAAI,SAAAH,GAAC,qBAAYA,MAC9CI,EAA8B,IAAhBvB,EACdwB,EAAaxB,IAAgBI,EAAYQ,OAE/C,OACE,qCACE,qBAAIa,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAAeF,GAAe,YAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAAeH,EACfI,QAAS,kBAAOJ,GAAetB,EAAaD,EAAc,IAL5D,oBAWDI,EAAYkB,KAAI,SAAAM,GAAU,OACzB,oBAEEH,UAAS,oBAAezB,IAAgB4B,GAAc,UAFxD,SAIE,mBACE,UAAQ,WACRH,UAAU,YACVC,KAAI,WAAME,GACVD,QAAS,kBAAM1B,EAAa2B,IAJ9B,SAMGA,KATEA,MAcT,oBAAIH,UAAS,oBAAeD,GAAc,YAA1C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAK,QACL,gBAAeF,EACfG,QAAS,kBAAOH,GAAcvB,EAAaD,EAAc,IAL3D,uBAWJ,6BACGgB,EACEa,MAAM3B,EAAYC,GAClBmB,KAAI,SAAAQ,GAAI,OACP,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCjEfxB,EAAe,CAAC,EAAG,EAAG,GAAI,IAEnByB,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOjC,EAAP,KAAgBoC,EAAhB,KACMjC,GAAc+B,EAAO,GAAKlC,EAC1BI,EAAWK,KAAK4B,IAAIlC,EAAaH,EAP3B,IAoBZ,OACE,sBAAK0B,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWQ,EADX,mBAC0B/B,EAAa,EADvC,cAC8CC,EAD9C,eAxBQ,GAwBR,OAIA,sBAAKsB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRY,GAAG,kBACHZ,UAAU,eACVa,MAAOvC,EACPwC,SApBkB,SAACC,GAC3BL,EAAWM,OAAOD,EAAME,OAAOJ,QAC/BJ,EAAQ,IAaF,SAOG5B,EAAagB,KAAI,SAAAqB,GAAa,OAC7B,wBAAQL,MAAOK,EAAf,SACGA,WAMT,uBAAOC,QAAQ,kBAAkBnB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACE3B,MAnDM,GAoDNC,QAASA,EACTC,YAAaiC,EACbhC,aA7CmB,SAACD,GACpBA,IAAgBiC,GAClBC,EAAQlC,IA4CNE,WAAYA,EACZC,SAAUA,QC1DlB0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.0dc30bc8.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport const getPageNumbers = (totalItems: number, itemsPerPage: number) => {\n  const numberOfPages = Math.ceil(totalItems / itemsPerPage);\n\n  return Array.from({ length: numberOfPages }, (_, i) => i + 1);\n};\n","import { getPageNumbers, getNumbers } from '../../utils';\n\ntype PaginationProps = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n  startIndex: number,\n  endIndex: number,\n};\n\nexport const Pagination = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  startIndex,\n  endIndex,\n}: PaginationProps) => {\n  const pageNumbers = getPageNumbers(total, perPage);\n  const items = getNumbers(1, total).map(n => `Item ${n}`);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageNumbers.length;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${isFirstPage && 'disabled'}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={() => !isFirstPage && onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map(pageNumber => (\n          <li\n            key={pageNumber}\n            className={`page-item ${currentPage === pageNumber && 'active'}`}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => onPageChange(pageNumber)}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n\n        <li className={`page-item ${isLastPage && 'disabled'}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={() => !isLastPage && onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items\n          .slice(startIndex, endIndex)\n          .map(item => (\n            <li key={item} data-cy=\"item\">{item}</li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst total = 42;\nconst itemsPerPage = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const startIndex = (page - 1) * perPage;\n  const endIndex = Math.min(startIndex + perPage, total);\n\n  const handlePageChange = (currentPage: number) => {\n    if (currentPage !== page) {\n      setPage(currentPage);\n    }\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startIndex + 1} - ${endIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            {itemsPerPage.map(numberOfItems => (\n              <option value={numberOfItems}>\n                {numberOfItems}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={handlePageChange}\n        startIndex={startIndex}\n        endIndex={endIndex}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}